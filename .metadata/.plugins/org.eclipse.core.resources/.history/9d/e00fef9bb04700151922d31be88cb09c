// Leetcode 110
// Balanced Binary Tree
// https://leetcode.com/problems/balanced-binary-tree/

// Given a binary tree, determine if it is height-balanced.
// 
// For this problem, a height-balanced binary tree is defined 
// as a binary tree in which the depth of the two subtrees of 
// every node never differ by more than 1.


class TreeNode {
	int val;
	TreeNode left;
	TreeNode right;

	TreeNode(int x) {
		val = x;
	}
}
 
public class Solution {
    public boolean isBalanced(TreeNode root) {
        if (root == null) {
        	return true;
        }
        else {
        	return isBalanced(root.left) 
        			&& isBalanced(root.right)
        			&& (Math.abs(height(root.left) - height(root.right)) <= 1);
        }
    }
    
    // RETURNS: the height of the given tree
    public int height(TreeNode root) {
    	if (root == null) {
    		return 0;
    	}
    	else {
    		return 1 + Math.max(height(root.left), height(root.right));
    	}
    }
}