// Leetcode 33
// Search in Rotated Sorted Array
// https://leetcode.com/problemset/algorithms/

// Suppose a sorted array is rotated at some pivot unknown to you beforehand.
// 
// (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
// 
// You are given a target value to search. If found in the array return its index,
// otherwise return -1.
// 
// You may assume no duplicate exists in the array.

import tester.Tester;

public class Solution {
    public int search(int[] nums, int target) {
        
    }
}

class SolutionExamples {
	Solution s = new Solution();
	
	// tests for method search()
	boolean testSearch(Tester t) {
		return
		t.checkExpect(s.search(new int[] {1, 0}, 2), -1) &&
		t.checkExpect(s.search(new int[] {1, 0}, 1), 0) &&
		t.checkExpect(s.search(new int[] {4, 5, 6, 7, 0, 1, 2}, 3), -1) &&
		t.checkExpect(s.search(new int[] {4, 5, 6, 7, 0, 1, 2}, 2), 7);
	}
}